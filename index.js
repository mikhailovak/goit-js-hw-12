/* empty css                      */import{a as E,S,i as l}from"./assets/vendor-C4-ZuMk8.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const f of n.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&t(f)}).observe(document,{childList:!0,subtree:!0});function s(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function t(o){if(o.ep)return;o.ep=!0;const n=s(o);fetch(o.href,n)}})();const P="46942599-830cfdf21ab89ebfad31f139e",R="https://pixabay.com/api/";async function y(r,e=1){const s={key:P,q:r,image_type:"photo",orientation:"horizontal",safesearch:"true",per_page:15,page:e};try{return(await E.get(R,{params:s})).data}catch(t){throw console.error("Error fetching data:",t),t}}let g=null;function w(r,e){const s=r.map(t=>`
        <li class="image-item">
            <a href="${t.largeImageURL}" class="gallery-link"> 
                <img src="${t.webformatURL}" alt="${t.tags}" />
                <div class="image-info">
                    <p><strong>Likes:</strong> ${t.likes}</p>
                    <p><strong>Views:</strong> ${t.views}</p>
                    <p><strong>Comments:</strong> ${t.comments}</p>
                    <p><strong>Downloads:</strong> ${t.downloads}</p>
                </div>
            </a>
        </li>
    `).join("");e.insertAdjacentHTML("beforeend",s),g?g.refresh():g=new S(".gallery-link",{captionsData:"alt",captionDelay:250})}function v(){l.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"})}const q=document.querySelector(".submit-form"),h=document.querySelector(".list"),c=document.querySelector(".load-more"),L=document.getElementById("loader");q.addEventListener("submit",I);c.addEventListener("click",M);let i=1,d="",p=0;function a(r,e){r.style.display=e?"block":"none"}function b(){a(L,!0)}function u(){a(L,!1)}function m(){h.innerHTML=""}async function I(r){r.preventDefault();const e=r.currentTarget.elements.searchQuery.value.trim();if(e!==d&&(d=e,i=1,m(),a(c,!1)),e===""){l.warning({title:"Warning",message:"Please enter a search query!",position:"topRight"});return}b();try{const s=await y(e,i);u(),s.hits.length===0?(m(),v(),a(c,!1)):(w(s.hits,h),p=Math.ceil(s.totalHits/15),i+=1,a(c,i<=p))}catch(s){u(),console.error("Error:",s),l.error({title:"Error",message:"Something went wrong. Please try again later.",position:"topRight"})}}async function M(){b();try{const r=await y(d,i);if(u(),r.hits.length>0){w(r.hits,h),i+=1;const e=document.querySelector(".image-item");if(e){const t=e.getBoundingClientRect().height;window.scrollBy({top:t*2,behavior:"smooth"})}const s=Math.ceil(r.totalHits/15);i>s&&(a(c,!1),l.info({title:"Info",message:"We're sorry, but you've reached the end of search results.",position:"topRight"}))}else a(c,!1),l.info({title:"Info",message:"No more images to load.",position:"topRight"})}catch(r){u(),console.error("Error:",r),l.error({title:"Error",message:"Something went wrong. Please try again later.",position:"topRight"})}}
//# sourceMappingURL=index.js.map
